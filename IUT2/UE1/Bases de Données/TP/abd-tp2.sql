-- Question 1
SELECT GROUPE, COUNT(NUM_ET)
FROM ETUDIANT
GROUP BY GROUPE
ORDER BY GROUPE;

-- Question 2
SELECT NUM_ET, MAX(NVL(MOY_TEST,0))
FROM NOTATION
GROUP BY NUM_ET;

-- Question 3
SELECT ET.NUM_ET, ET.NOM_ET, CODE, COUNT(NUM_PROF) COUNT_PROF
FROM ENSEIGNT EN
JOIN ETUDIANT ET ON ET.NUM_ET=EN.NUM_ET
WHERE ANNEE=2
GROUP BY ET.NUM_ET, ET.NOM_ET, CODE;

-- Question 4
SELECT VILLE_PROF, COUNT(NUM_PROF) NUM_PROF
FROM PROF
GROUP BY VILLE_PROF
HAVING COUNT(NUM_PROF)>=5;

-- Question 5
SELECT P.NUM_PROF, P.NOM_PROF, ET.ANNEE, COUNT(EN.NUM_ET) NUM_ET
FROM PROF P
JOIN ENSEIGNT EN ON EN.NUM_PROF=P.NUM_PROF
JOIN ETUDIANT ET ON ET.NUM_ET=EN.NUM_ET
GROUP BY P.NUM_PROF, P.NOM_PROF, ET.ANNEE
ORDER BY NUM_PROF, ANNEE;

-- Question 6
SELECT P.NUM_PROF, P.NOM_PROF, COUNT(M.CODE) NUM_MAT
FROM ENSEIGNT EN
JOIN PROF P ON EN.NUM_PROF=P.NUM_PROF
JOIN MODULE M ON M.RESP=P.NUM_PROF
GROUP BY P.NUM_PROF, P.NOM_PROF
ORDER BY NUM_PROF;

SELECT P.NUM_PROF, P.NOM_PROF, COUNT(CODE) NUM_MAT
FROM ENSEIGNT EN
JOIN PROF P ON EN.NUM_PROF=P.NUM_PROF
WHERE P.NUM_PROF IN (SELECT RESP
                     FROM MODULE)
GROUP BY P.NUM_PROF, P.NOM_PROF
ORDER BY NUM_PROF;

-- Question 7
SELECT GROUPE, ROUND(AVG(MOY_TEST),2) MOY
FROM NOTATION N
JOIN ETUDIANT ET ON N.NUM_ET=ET.NUM_ET
JOIN MODULE M ON N.CODE=M.CODE
WHERE LIBELLE='CONCEPTION DE SI'
GROUP BY GROUPE;

-- Question 8
SELECT EN.NUM_PROF, P.NOM_PROF
FROM ENSEIGNT EN
JOIN PROF P ON EN.NUM_PROF=P.NUM_PROF
GROUP BY EN.NUM_PROF, P.NOM_PROF
HAVING COUNT(DISTINCT CODE)=(SELECT COUNT(DISTINCT CODE)
                             FROM ENSEIGNT EN
                             JOIN PROF P ON EN.NUM_PROF=P.NUM_PROF
                             WHERE NOM_PROF='FAURE' AND PRENOM_PROF='BERNARD')
ORDER BY EN.NUM_PROF;

-- Questioni 9
SELECT AVG(COUNT(NUM_ET)) EFF_MOY
FROM ETUDIANT
WHERE ANNEE=2
GROUP BY GROUPE;

-- Question 10
SELECT MAX(COUNT(NUM_ET)) MAX_ET
FROM ENSEIGNT
GROUP BY NUM_PROF, CODE;

-- Question 11
SELECT CODE, ROUND((H_COURS_PREV / TOTAL)*100,2) "%"
FROM MODULE M, (SELECT SUM(H_COURS_PREV) TOTAL, DISCIPLINE
                FROM MODULE
                GROUP BY DISCIPLINE) H
WHERE M.DISCIPLINE = H.DISCIPLINE;

-- Question 12
SELECT EN.CODE, COUNT(DISTINCT EN.NUM_PROF) COUNT_PROF, MAX(MOY_TEST) MAX_MOY_TEST
FROM ENSEIGNT EN
JOIN NOTATION N ON EN.CODE=N.CODE
GROUP BY EN.CODE;

-- Question 13
SELECT NOM_PROF, PRENOM_PROF
FROM PROF P
JOIN ENSEIGNT EN ON P.NUM_PROF=EN.NUM_PROF
JOIN ETUDIANT ET ON ET.NUM_ET=EN.NUM_ET
WHERE ET.ANNEE = 2
GROUP BY NOM_PROF, PRENOM_PROF
HAVING COUNT(DISTINCT EN.NUM_ET) = (SELECT COUNT(NUM_ET)
                                    FROM ETUDIANT
                                    WHERE ANNEE=2);

-- Question 14
SELECT ET.NUM_ET, ET.NOM_ET, ET.PRENOM_ET, MIN(MOY_TEST)
FROM NOTATION N
JOIN ETUDIANT ET ON N.NUM_ET=ET.NUM_ET
GROUP BY ET.NUM_ET, ET.NOM_ET, ET.PRENOM_ET
HAVING MIN(MOY_TEST)>10;

-- Question 15
SELECT DISTINCT NOM_ET, PRENOM_ET
FROM ENSEIGNT EN
JOIN ETUDIANT ET ON EN.NUM_ET=ET.NUM_ET
WHERE NOT EXISTS (SELECT NUM_PROF
                  FROM ENSEIGNT EN2
                  WHERE EN2.NUM_PROF=EN.NUM_PROF
                  AND NOT EXISTS (SELECT NUM_ET
                                  FROM ENSEIGNT
                                  WHERE NUM_PROF=EN2.NUM_PROF
                                  AND NUM_ET=1102));
                                  
-- Question 16
SELECT DISTINCT NOM_ET, PRENOM_ET
FROM ENSEIGNT EN
JOIN ETUDIANT ET ON ET.NUM_ET=EN.NUM_ET
JOIN MODULE M ON M.CODE=EN.CODE
WHERE LIBELLE='CONCEPTION DE SI'
GROUP BY NOM_ET, PRENOM_ET
HAVING COUNT(DISTINCT NUM_PROF) = (SELECT COUNT(DISTINCT NUM_PROF)
                                   FROM ENSEIGNT EN
                                   JOIN MODULE M ON M.CODE=EN.CODE
                                   WHERE M.LIBELLE='CONCEPTION DE SI');
                                   
SELECT DISTINCT NOM_ET, PRENOM_ET
FROM ETUDIANT ET
WHERE NOT EXISTS (SELECT *
                  FROM MODULE M, PROF P, ENSEIGNT E1
                  WHERE LIBELLE='CONCEPTION DE SI'
                  AND M.CODE=E1.CODE
                  AND P.NUM_PROF=E1.NUM_PROF
                  AND NOT EXISTS (SELECT *
                                  FROM ENSEIGNT E2
                                  WHERE E2.NUM_PROF=P.NUM_PROF
                                  AND ET.NUM_ET=E2.NUM_ET
                                  AND E2.CODE=E1.CODE));
                                  
-- Question 17
SELECT LIBELLE
FROM MODULE
WHERE CODEPERE IS NULL;

-- Question 18
SELECT LPAD('-',2*LEVEL,' ')||LIBELLE
FROM MODULE
CONNECT BY PRIOR CODE=CODEPERE
START WITH LIBELLE='PROGRAMME DUT INFO';

-- Question 19
SELECT LIBELLE
FROM MODULE
WHERE CODEPERE=(SELECT CODE
                FROM MODULE
                WHERE LIBELLE='OUTILS MODELES GENIE LOGICIEL');
                
-- Question 20
SELECT LPAD('-',2*LEVEL,' ')||LIBELLE
FROM MODULE
CONNECT BY CODE=PRIOR CODEPERE
START WITH LIBELLE='BASES DE DONNEES';

-- Question 21
SELECT LPAD('-',2*LEVEL,' ')||LIBELLE
FROM MODULE
CONNECT BY PRIOR CODE=CODEPERE
AND LIBELLE<>'BASES DE DONNEES'
START WITH LIBELLE='INFORMATIQUE 2EME ANNEE';

-- Question 22
SELECT DISTINCT GROUPE
FROM NOTATION N
JOIN MODULE M ON N.CODE=M.CODE
JOIN ETUDIANT ET ON N.NUM_ET=ET.NUM_ET
WHERE N.MOY_TEST > (SELECT MAX(MOY_TEST) MAX_GROUPE3
                    FROM NOTATION N
                    JOIN MODULE M ON N.CODE=M.CODE
                    JOIN ETUDIANT ET ON N.NUM_ET=ET.NUM_ET
                    WHERE M.LIBELLE='CONCEPTION DE SI'
                    AND ET.GROUPE=3);
                    
-- Question 23
SELECT NUM_ET, MOY_TEST, NVL(MAX_TEST,0), NVL(MIN_TEST,0)
FROM NOTATION N, (SELECT MAX(NVL(MOY_TEST,0)) MAX_TEST, MIN(NVL(MOY_TEST,0)) MIN_TEST
                  FROM NOTATION N2
                  JOIN MODULE M2 ON N2.CODE=M2.CODE
                  WHERE M2.LIBELLE='CONCEPTION DE SI') MAX_MIN
JOIN MODULE M ON N.CODE=M.CODE
WHERE M.LIBELLE='CONCEPTION DE SI';

-- Question 30
SELECT COLUMN_NAME
FROM USER_TAB_COLUMNS
WHERE TABLE_NAME='PROF';

-- Question 31
SELECT COLUMN_NAME
FROM USER_TAB_COLUMNS
WHERE DATA_TYPE='DATE';

-- Question 32
SELECT *
FROM USER_CONSTRAINTS;

-- Question 33
SELECT *
FROM USER_CONSTRAINTS UC
JOIN USER_CONS_COLUMNS UCC ON UC.CONSTRAINT_NAME=UCC.CONSTRAINT_NAME
JOIN USER_TAB_COLUMNS UTC ON UC.TABLE_NAME=UTC.TABLE_NAME
WHERE UTC.DATA_TYPE='NUMBER';

-- Question 34
SELECT UC.TABLE_NAME, UCC.COLUMN_NAME, UTC.DATA_TYPE
FROM USER_CONSTRAINTS UC
JOIN USER_CONS_COLUMNS UCC ON UC.CONSTRAINT_NAME=UCC.CONSTRAINT_NAME
JOIN USER_TAB_COLUMNS UTC ON UC.TABLE_NAME=UTC.TABLE_NAME
WHERE UTC.DATA_TYPE='NUMBER';

-- Question 35
SELECT UC.CONSTRAINT_NAME, UCC.COLUMN_NAME
FROM USER_CONSTRAINTS UC
JOIN USER_CONS_COLUMNS UCC ON UC.CONSTRAINT_NAME=UCC.CONSTRAINT_NAME
JOIN USER_TAB_COLUMNS UTC ON UC.TABLE_NAME=UTC.TABLE_NAME
WHERE UTC.DATA_TYPE='NUMBER';