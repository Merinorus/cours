-- Question 1
DECLARE
  MOYENNE NOTATION.MOY_TEST%TYPE;
BEGIN
  SELECT AVG(MOY_TEST) INTO MOYENNE
  FROM NOTATION
  WHERE CODE='BD';
  DBMS_OUTPUT.PUT_LINE('La moyenne est '||MOYENNE);
END;

-- Question 2
DECLARE
  CURSOR RESULTATS IS SELECT NOM_ET, PRENOM_ET, CODE, MOY_TEST
                      FROM NOTATION N
                      JOIN ETUDIANT ET ON ET.NUM_ET=N.NUM_ET;
  CHK BOOLEAN DEFAULT FALSE;
  ERR EXCEPTION;
BEGIN
  FOR ET IN RESULTATS LOOP
    CHK:=TRUE;
    DBMS_OUTPUT.PUT_LINE(ET.NOM_ET||' '||ET.PRENOM_ET||' '||ET.MOY_TEST||' '||ET.CODE);
  END LOOP;
  IF CHK = FALSE THEN
    RAISE ERR;
  END IF;
EXCEPTION
  WHEN ERR THEN DBMS_OUTPUT.PUT_LINE('Aucun enregistrement.');
END;

DECLARE
  CURSOR RESULTATS IS SELECT NOM_ET, PRENOM_ET, CODE, MOY_TEST
                      FROM NOTATION N
                      JOIN ETUDIANT ET ON ET.NUM_ET=N.NUM_ET;
  ET RESULTATS%ROWTYPE;
  ERR EXCEPTION;
BEGIN
  OPEN RESULTATS;
  FETCH RESULTATS INTO ET;
  WHILE RESULTATS%FOUND LOOP
    FETCH RESULTATS INTO ET;
    DBMS_OUTPUT.PUT_LINE(ET.NOM_ET||' '||ET.PRENOM_ET||' '||ET.MOY_TEST||' '||ET.CODE);
  END LOOP;
  IF RESULTATS%EMPTY THEN
    RAISE ERR;
  END IF;
  CLOSE RESULTATS;
EXCEPTION
  WHEN ERR THEN DBMS_OUTPUT.PUT_LINE('Aucun enregistrement.');
END;

-- Question 4
ACCEPT CODEMAT PROMPT 'Donner le code de la mati√®re';
DECLARE
  CURSOR PERES IS SELECT CODE, LIBELLE
                  FROM MODULE
                  CONNECT BY CODE=PRIOR CODEPERE
                  START WITH CODE=(SELECT CODEPERE
                                   FROM MODULE
                                   WHERE CODE='&CODEMAT');
  CHEMIN VARCHAR2(50) DEFAULT '';
BEGIN
  FOR PERE IN PERES LOOP
    CHEMIN:=PERE.CODE||'/'||CHEMIN;
  END LOOP;
  DBMS_OUTPUT.PUT_LINE(CHEMIN);
END;

-- Question 5
ACCEPT NOMTABLE PROMPT 'Nom de la base';
DECLARE
  CURSOR ATTRIBUTS IS SELECT COLUMN_NAME
                      FROM USER_TAB_COLUMNS
                      WHERE TABLE_NAME='&NOMTABLE';
  DISP VARCHAR2(255):='&NOMTABLE(';
  PREM BOOLEAN:=TRUE;
BEGIN
  FOR ATTR IN ATTRIBUTS LOOP
    IF NOT PREM THEN
      DISP:=DISP||',';
    END IF;
    PREM:=FALSE;
    
    DISP:=DISP||ATTR.COLUMN_NAME;
  END LOOP;
  DBMS_OUTPUT.PUT_LINE(DISP||')');
END;

-- Question 6
CREATE TABLE MATIERE(CODE VARCHAR2(7),
                         LIBELLE VARCHAR(30),
                         CONSTRAINT MATIERE_PRIM_KEY PRIMARY KEY(CODE) ENABLE);

DECLARE
  COUNT_MODULE NUMBER(1,0);
  COUNT_MATIERE NUMBER(1,0);
  CURSOR MODULES IS SELECT CODE, LIBELLE
                    FROM MODULE
                    WHERE CODE NOT IN (SELECT NVL(CODEPERE,'NULL')
                                       FROM MODULE);
BEGIN
  SELECT COUNT(TABLE_NAME) INTO COUNT_MODULE
  FROM USER_TABLES
  WHERE TABLE_NAME='MODULE';
  
  SELECT COUNT(TABLE_NAME) INTO COUNT_MATIERE
  FROM USER_TABLES
  WHERE TABLE_NAME='MATIERE';

  IF COUNT_MODULE = 0 THEN
    RAISE_APPLICATION_ERROR(-20500,'Table MODULE does not exist.');
  END IF;
  
  IF COUNT_MATIERE = 0 THEN
    RAISE_APPLICATION_ERROR(-20500,'Table MATIERE does not exist.');
  END IF;
  
  FOR MAT IN MODULES LOOP
    INSERT INTO MATIERE(CODE, LIBELLE) VALUES(MAT.CODE, MAT.LIBELLE);
  END LOOP;
  
  COMMIT;
EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(sqlcode);
END;