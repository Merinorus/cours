-- Questin 0
SELECT ADDITION(2,4) RESULTAT
FROM DUAL;

-- Question 1
SELECT AGE('23/06/1995') AGE
FROM DUAL;

-- Question 2
SELECT ISMATIERE('BD') MATIERE
FROM DUAL;

-- Question 3
SELECT VILLE_RES(2101)
FROM DUAL;

-- Question 4
DECLARE
FUNCTION HIERARCHIE_MAT(CODEMAT IN VARCHAR2)
         RETURN VARCHAR2 AS 
CURSOR hier IS SELECT LIBELLE
               FROM MODULE
               CONNECT BY CODE=PRIOR CODEPERE
               START WITH CODE=CODEMAT;
str VARCHAR2(255);
countMat NUMBER(1,0) DEFAULT 0;
matNotExist EXCEPTION;
BEGIN

  SELECT COUNT(CODE) INTO countMat
  FROM MODULE
  WHERE CODE=CODEMAT;
  
  IF countMat = 0 THEN
    RAISE matNotExist;
  END IF;

  FOR mat IN hier LOOP
    str:=str||'/'||mat.LIBELLE;
  END LOOP;
  RETURN str;
EXCEPTION
  WHEN matNotExist THEN DBMS_OUTPUT.PUT_LINE('La mati√®re n''existe pas.'); RETURN sqlcode;
  WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE(sqlcode); RETURN sqlcode;
END HIERARCHIE_MAT;
BEGIN
  DBMS_OUTPUT.PUT_LINE(HIERARCHIE_MAT('BD'));
END;

-- Question 5
DECLARE
  CURSOR TABS IS SELECT TABLE_NAME
                 FROM USER_TABLES;
  FUNCTION LIST_ATTR(TAB IN VARCHAR2)
                    RETURN VARCHAR2 AS 
    CURSOR ATTRIBUTS(TABNAME USER_TAB_COLUMNS.TABLE_NAME%TYPE) IS SELECT COLUMN_NAME
                                           FROM USER_TAB_COLUMNS
                                           WHERE TABLE_NAME=TABNAME;
    LISTATTR VARCHAR2(255);
    PREM BOOLEAN:=TRUE;
  BEGIN
    FOR ATTR IN ATTRIBUTS(TAB) LOOP
      IF NOT PREM THEN
        LISTATTR:=LISTATTR||',';
      END IF;
      PREM:=FALSE;
      
      LISTATTR:=LISTATTR||ATTR.COLUMN_NAME;
    END LOOP;
    RETURN LISTATTR;
  END LIST_ATTR;
BEGIN
  FOR TAB IN TABS LOOP
    DBMS_OUTPUT.PUT_LINE(TAB.TABLE_NAME||'('||LIST_ATTR(TAB.TABLE_NAME)||')');
  END LOOP;
END;
